# Generated by Django 4.2.13 on 2025-06-28 01:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('can_moderate_posts', models.BooleanField(default=True, verbose_name='Может модерировать посты')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='Может управлять пользователями')),
                ('can_manage_payments', models.BooleanField(default=False, verbose_name='Может управлять платежами')),
                ('can_view_analytics', models.BooleanField(default=True, verbose_name='Может просматривать аналитику')),
                ('can_manage_config', models.BooleanField(default=False, verbose_name='Может изменять конфигурацию')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='eWork', max_length=200, verbose_name='Название сайта')),
                ('site_description', models.TextField(default='Платформа для поиска работы и услуг', verbose_name='Описание сайта')),
                ('site_url', models.URLField(default='https://localhost:8000', verbose_name='URL сайта')),
                ('bot_token', models.CharField(blank=True, max_length=200, verbose_name='Bot Token')),
                ('bot_username', models.CharField(blank=True, max_length=100, verbose_name='Bot Username')),
                ('notification_bot_token', models.CharField(blank=True, max_length=200, verbose_name='Notification Bot Token')),
                ('admin_chat_id', models.CharField(blank=True, max_length=50, verbose_name='Admin Chat ID')),
                ('payment_provider_token', models.CharField(blank=True, max_length=200, verbose_name='Payment Provider Token')),
                ('mistral_api_key', models.CharField(blank=True, max_length=200, verbose_name='Mistral API Key')),
                ('auto_moderation_enabled', models.BooleanField(default=True, verbose_name='Автоматическая модерация включена')),
                ('manual_approval_required', models.BooleanField(default=False, verbose_name='Требуется ручное одобрение')),
                ('max_free_posts_per_user', models.PositiveIntegerField(default=3, verbose_name='Максимум бесплатных постов на пользователя')),
                ('post_expiry_days', models.PositiveIntegerField(default=30, verbose_name='Дни до истечения поста')),
                ('min_rating_to_post', models.FloatField(default=0.0, verbose_name='Минимальный рейтинг для публикации')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Контактный email')),
                ('support_email', models.EmailField(blank=True, max_length=254, verbose_name='Email поддержки')),
                ('telegram_channel', models.CharField(blank=True, max_length=100, verbose_name='Telegram канал')),
                ('telegram_group', models.CharField(blank=True, max_length=100, verbose_name='Telegram группа')),
                ('meta_keywords', models.TextField(blank=True, verbose_name='Meta keywords')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta description')),
                ('debug_mode', models.BooleanField(default=False, verbose_name='Режим отладки')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Режим обслуживания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Конфигурация сайта',
                'verbose_name_plural': 'Конфигурация сайта',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20, verbose_name='Уровень')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('module', models.CharField(blank=True, max_length=100, verbose_name='Модуль')),
                ('user_id', models.BigIntegerField(blank=True, null=True, verbose_name='ID пользователя')),
                ('extra_data', models.JSONField(blank=True, null=True, verbose_name='Дополнительные данные')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Системный лог',
                'verbose_name_plural': 'Системные логи',
                'ordering': ['-created_at'],
            },
        ),
    ]

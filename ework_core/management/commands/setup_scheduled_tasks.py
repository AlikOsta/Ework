"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á Django-Q
"""
from django.core.management.base import BaseCommand
from django_q.models import Schedule
from django_q.tasks import schedule


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –¥–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--setup',
            action='store_true',
            help='–°–æ–∑–¥–∞—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏',
        )
        parser.add_argument(
            '--status',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á',
        )
        parser.add_argument(
            '--remove',
            action='store_true',
            help='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏',
        )

    def handle(self, *args, **options):
        if options['setup']:
            self.setup_schedules()
        elif options['status']:
            self.show_status()
        elif options['remove']:
            self.remove_schedules()
        else:
            self.stdout.write('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --setup, --status –∏–ª–∏ --remove')

    def setup_schedules(self):
        """–°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏"""
        self.stdout.write('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á...')
        
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ —Å —Ç–µ–º–∏ –∂–µ –∏–º–µ–Ω–∞–º–∏
        Schedule.objects.filter(name__in=[
            'archive_expired_posts',
            'cleanup_old_tasks'
        ]).delete()
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00)
        schedule(
            'ework_core.tasks.archive_expired_posts',
            name='archive_expired_posts',
            schedule_type=Schedule.DAILY,
            next_run=None,  # –ë—É–¥–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–ª–Ω–æ—á—å
            repeats=-1  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ
        )
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –∑–∞–¥–∞—á (–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ)
        schedule(
            'ework_core.tasks.cleanup_old_tasks',
            name='cleanup_old_tasks',
            schedule_type=Schedule.WEEKLY,
            repeats=-1
        )
        
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:')
        )
        self.stdout.write('  - archive_expired_posts: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00')
        self.stdout.write('  - cleanup_old_tasks: –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ')

    def show_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á"""
        schedules = Schedule.objects.all()
        
        if not schedules:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è  –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
            )
            return
        
        self.stdout.write('üìÖ –°—Ç–∞—Ç—É—Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á:')
        self.stdout.write('-' * 50)
        
        for schedule_obj in schedules:
            status = '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' if schedule_obj.enabled else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞'
            next_run = schedule_obj.next_run.strftime('%Y-%m-%d %H:%M:%S') if schedule_obj.next_run else '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞'
            
            self.stdout.write(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {schedule_obj.name}")
            self.stdout.write(f"–§—É–Ω–∫—Ü–∏—è: {schedule_obj.func}")
            self.stdout.write(f"–°—Ç–∞—Ç—É—Å: {status}")
            self.stdout.write(f"–¢–∏–ø: {schedule_obj.get_schedule_type_display()}")
            self.stdout.write(f"–°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: {next_run}")
            self.stdout.write('-' * 30)

    def remove_schedules(self):
        """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏"""
        count = Schedule.objects.count()
        Schedule.objects.all().delete()
        
        self.stdout.write(
            self.style.SUCCESS(f'üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ {count} –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á')
        )
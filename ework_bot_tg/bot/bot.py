from aiogram import Dispatcher, types
from aiogram.client.bot import Bot
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
import asyncio

BOT_TOKEN = "7554067474:AAG75CqnZSiqKiWgpZ4zX6hNW_e6f9uZn1g"
MINIAPP_URL = "https://6e89-181-97-30-161.ngrok-free.app/users/index/"
PAYMENT_PROVIDER_TOKEN = '1744374395:TEST:703d48b8cac170d51296'

# –£–∫–∞–∑—ã–≤–∞–µ–º parse_mode —á–µ—Ä–µ–∑ DefaultBotProperties
default_props = DefaultBotProperties(parse_mode="HTML")
bot = Bot(token=BOT_TOKEN, default=default_props)
dp = Dispatcher()

@dp.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    """
    –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start: –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    """
    webapp_button = InlineKeyboardButton(
        text="üöÄ –û—Ç–∫—Ä—ã—Ç—å Mini App",
        web_app=WebAppInfo(url=MINIAPP_URL)
    )
    # –°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[webapp_button]])

    await message.answer(
        text="–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—à Mini App:",
        reply_markup=keyboard
    )

@dp.message(Command(commands=["invoice"]))
async def send_invoice(message: types.Message):
    await message.bot.send_invoice(
        chat_id=message.chat.id,
        title="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        payload="unique_payload",
        provider_token=PAYMENT_PROVIDER_TOKEN,
        currency="RUB",
        prices=[
            LabeledPrice(label="–¢–æ–≤–∞—Ä", amount=1000),  # 10.00 —Ä—É–±–ª–µ–π (–≤ –∫–æ–ø–µ–π–∫–∞—Ö)
        ],
        start_parameter="start_parameter",
        need_email=True,
    )

@dp.pre_checkout_query()
async def pre_checkout_query(pre_checkout: types.PreCheckoutQuery):
    await pre_checkout.bot.answer_pre_checkout_query(
        pre_checkout_query_id=pre_checkout.id,
        ok=True
    )

async def successful_payment(message: types.Message):
    payload = message.successful_payment.invoice_payload
    user_id = int(payload.split('_')[1])
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É—Å–ª—É–≥–∏ –≤ –ë–î
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ payload –¥–ª—è —Å–≤—è–∑–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å–µ—Å—Å–∏–∏
    
    await message.answer(f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í–∞—à–∞ —É—Å–ª—É–≥–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.")

async def main():
    # –£–¥–∞–ª—è–µ–º webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
    await bot.delete_webhook(drop_pending_updates=True)
    print("Webhook —É–¥–∞–ª–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º polling...")

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
